//#include<iostream>
//#include<string>
//using namespace std;
//
//class Person {
//public:
//	int m_A;
//	mutable int m_B;//特殊变量，在常函数中，也可以修改这个值
//
//public:
//	Person() {
//		m_A = 0;
//		m_B = 0;
//	}
//
//	//this指针的本质 是指针常量，指针的指向不可以修改---Person * const this
//	//在成员函数后面加const，修饰的this指向，让指针指向的值也不能修改
//	void showPerson()const {
//		//const Type* const pointer;
////this = NULL; //不能修改指针的指向 Person* const this;
////this->mA = 100; //但是this指针指向的对象的数据是可以修改的
//
////const修饰成员函数，表示指针指向的内存空间的数据不能修改，除了mutable修饰的变量
//		this->m_B = 100;
//
//	}
//
//
//	void MyFunc()const {
//		//mA = 10000;
//
//	}
//
//};
//
//
////const修饰对象  常对象
//void test1501() {
//	const Person person; //常量对象
//	cout << person.m_A << endl;
//	//person.mA = 100; //常对象不能修改成员变量的值,但是可以访问
//	person.m_B = 100; //但是常对象可以修改mutable修饰成员变量
//
//	//常对象访问成员函数
//	person.MyFunc(); //常对象不能调用普通成员的函数，只能调用常函数
//}
//
//int main() {
//	test1501();
//	system("pause");
//	return 0;
//}